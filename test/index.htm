
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.9/css/bootstrap-dialog.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-social/5.1.1/bootstrap-social.min.css" integrity="sha256-rFMLRbqAytD9ic/37Rnzr2Ycy/RlpxE5QH52h7VoIZo=" crossorigin="anonymous" />
    <!-- Latest compiled and minified JavaScript -->
    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.9/js/bootstrap-dialog.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/1000hz-bootstrap-validator/0.11.9/validator.js" integrity="sha256-UiqIqgNXwR8ChFMaD8VrY0tBUIl/soqb7msaauJWZVc=" crossorigin="anonymous"></script>
    <style>

        body {
            padding-top: 33px;
        }
        .starter-template {
            padding: 40px 15px;
            text-align: center;
        }

        #loader {
            position: absolute;
            left: 50%;
            top: 50%;
            z-index: 1;
            width: 150px;
            height: 150px;
            margin: -75px 0 0 -75px;
            border: 16px solid #f3f3f3;
            border-radius: 50%;
            border-top: 16px solid #3498db;
            width: 120px;
            height: 120px;
            -webkit-animation: spin 2s linear infinite;
            animation: spin 2s linear infinite;
        }

        @-webkit-keyframes spin {
            0% { -webkit-transform: rotate(0deg); }
            100% { -webkit-transform: rotate(360deg); }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

    </style>
</head>
<body core-config='{"bloombeesOauth":"https://bloombees.com/h/service/oauth","bloombeesAPI":"https://bloombees.com/h/api","bloombeesWebKey":"testPage"}'
      core-lang="en" core-localize='{"tag1":"Hello world"}'>
<div id="loader" style="display: block" data-bind="visible: initLoading()"></div>
<div id="app" class="container" style="display: none"  data-bind="visible: !initLoading()">
    <!-- Static navbar -->
    <nav class="navbar navbar-default">

        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>

                <div data-bind="visible: !isAuth()" class="navbar-brand">
                    <div>
                        <a href="javascript:signInViaOauth('google')" class="btn btn-social-icon btn-google">
                            <span class="fa fa-google"></span>
                        </a>
                        <a href="javascript:signInViaOauth('facebook')" class="btn btn-social-icon btn-facebook">
                            <span class="fa fa-facebook"></span>
                        </a>
                        <a href="javascript:signInViaOauth('instagram')" class="btn btn-social-icon btn-instagram">
                            <span class="fa fa-instagram"></span>
                        </a>
                    </div>
                </div>
                <div id="areaUserName" class="navbar-brand" data-bind="visible: isAuth()" >
                    <div data-bind="with: userData"><span data-bind="text: Store_uniqueId">..loading data</span></div>
                </div>
            </div>
            <div id="navbar" class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li class="active"><a href="#">js-bloombees</a></li>
                </ul>
                <div id="areaLogin" style="display: none" data-bind="visible: !isAuth()" >

                    <form id="signin" class="navbar-form navbar-right" role="form">
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                <input data-error="Bruh, that email address is invalid" required id="email" type="email" class="form-control" name="email" data-bind="value: loginEmail" placeholder="Email Address">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                <input required id="password" type="password" class="form-control" name="password" data-bind="value: loginPassword" placeholder="Password">
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary">Login</button>
                    </form>
                </div>
                <div id="areaUser" style="display: none" data-bind="visible: isAuth()" >
                    <ul class="nav navbar-nav navbar-right">
                        <li ><a href="javascript:logOut();">[Logout]</a></span>
                        </li>
                    </ul>
                </div>
            </div><!--/.nav-collapse -->
        </div><!--/.container-fluid -->
    </nav>

    <!-- Main component for a primary marketing message or call to action -->
    <div data-bind="template: {name: 'homeTemplate'}"></div>



    <footer class="footer">
        <div class="container">
            <p class="text-muted" data-bind="with: bottomData"> bloombeesAPI: <b data-bind="text: bloombeesAPI"></b>
                bbtoken: [<b data-bind="text: bbtoken"></b>]
                bbhash:[<b data-bind="text: bbhash"></b>] [<a href="javascript:vm.reset();">r</a>]</p>
        </div>
    </footer>
</div> <!-- /container -->


<script src = "js/js-bloombees.js" _src="https://bloombees-googlestorage-7pxvh1vxhs.netdna-ssl.com/bloombees-public/static/js/js-bloombees.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.2/knockout-min.js" integrity="sha256-owX7sroiO/O1a7h3a4X29A1g3QgqdNvijRQ7V5TH45M=" crossorigin="anonymous"></script>
<script type="text/html" id="homeTemplate">
    <div id="homePage" class="jumbotron" style="display: none" data-bind="visible: !isAuth()" >
        <h1>js-bloombes</h1>
        <p>This example is a quick exercise to illustrate how js-bloombees is used.</p>
        <p>
            <a class="btn btn-lg btn-primary" href="https://github.com/BLOOMBEES/js-bloombees" role="button">View github &raquo;</a>
        </p>
    </div>

    <div id="authPage" class="jumbotron" style="display: none" data-bind="visible: isAuth()" >
        <div id="userSocialNetworks" data-bind="foreach: socialNetworks">
            <a data-bind="attr: {href: 'javascript:connectSocialNetwork(\''+sn+'\')', class: 'btn btn-social-icon btn-'+sn+((active)?'':' btn-default') }" ><span data-bind="attr: {class: 'fa fa-'+sn}"></span></a>
        </div>
        <h1>Auth user</h1>
    </div>
</script>
<script>

    // Signin module using Jquery.validator
    $('#signin').validator().on('submit', function (e) {
        if (e.isDefaultPrevented()) {
            // handle the invalid form...
        } else {
            vm.initLoading(true);
            Bloombees.login({email:vm.loginEmail(),password:vm.loginPassword()},function(response) {
                if(!response.success) {
                    vm.reset();
                    alertMsg('Error','User does not exist','type-warning');
                } else {
                    Core.bind([readConnectedSocialNetworks],function() {
                        vm.reset();
                    });
                }
            });
            return false;
        }
    });

    // Get socialnetworks
    function signInViaOauth(social) {
        vm.initLoading(true);
        Core.oauthpopup({
            path: Core.config.get('bloombeesOauth')+'/'+social+'?ret='+Core.url.parts('origin')+Core.url.parts('pathname')+'?oauth={id}',
            callback: function()
            {
                var oauth_id = Core.cookies.get('oauth');
                if(oauth_id) {
                    console.log(oauth_id);
                    Core.cookies.remove('oauth');
                    Bloombees.oauth(oauth_id,function(response) {
                        if(!response.success) {
                            alertMsg('Error',JSON.stringify(response.errors),'type-warning');
                            vm.reset();
                        } else {
                            Core.bind([readConnectedSocialNetworks],function() {
                                vm.reset();
                            });
                        }
                    });

                    //do callback stuff
                } else {
                    vm.reset();
                }
            }
        });
    }

    // Javascript logout
    function logOut() {
        vm.initLoading(true);
        Bloombees.logout(function(){
            vm.reset();
        });
    }

    // Connect or disconnect social networks for an Authenticated user.
    function connectSocialNetwork(social) {
        var socialnetworks= vm.availableSocialNetWorks;
        if(typeof socialnetworks == 'undefined' || typeof socialnetworks[social] == undefined) {
            Core.error.add('connectedSocialNetworks','missing socialnetworks or '+social);
            return;
        }
        // Url to connect
        if(socialnetworks[social].active) {
            if(confirm('Are you sure about disconnect '+social)) {
                vm.initLoading(true);
                if(Bloombees.debug) Core.log.printDebug("connectSocialNetwork: disconnecting "+social+': '+socialnetworks[social].id);
                Bloombees.disconnectUserSocialNetwork(socialnetworks[social].id,function(response) {
                    if(!response.success) {
                        alertMsg('Error',response.errors[0],'type-warning');
                        vm.reset();
                    } else {
                        Core.bind([readConnectedSocialNetworks],function() {
                            vm.reset();
                        });
                    }
                });
            }

        } else {
            if(confirm('Are you sure about connect '+social)) {
                vm.initLoading(true);
                Core.oauthpopup({
                    path: Core.config.get('bloombeesOauth')+'/'+social+'?ret='+Core.url.parts('origin')+Core.url.parts('pathname')+'?oauthconnect={id}',
                    callback: function()
                    {
                        var oauth_id = Core.cookies.get('oauthconnect');
                        if(oauth_id) {
                            console.log(oauth_id);
                            Core.cookies.remove('oauthconnect');
                            if(Bloombees.debug) Core.log.printDebug("connectSocialNetwork: connecting "+social+': '+oauth_id);
                            Bloombees.connectUserSocialNetwork(oauth_id,function(response) {
                                if(!response.success) {
                                    alertMsg('Error',response.errors[0],'type-warning');
                                    vm.reset();
                                } else {
                                    Core.bind([readConnectedSocialNetworks],function() {
                                        vm.reset();
                                    });
                                }
                            });

                            //do callback stuff
                        } else {
                            vm.reset();
                        }
                    }
                });

            }
        }

    }

    // Read Connected social networks associated to an user. The result will be stored in: Core.data.set('connectedSocialNetworks',..);
    function readConnectedSocialNetworks(resolve,reject) {
        Core.data.set('connectedSocialNetworks',[]);
        if(Core.user.isAuth()) {
            // Read
            Bloombees.getUserSocialNetworks(function(response) {
                if(response.success) {
                    Core.data.set('connectedSocialNetworks',response.data.SocialNetworks);
                    if(Bloombees.debug) Core.log.printDebug("Core.data.set('connectedSocialNetworks',response.data.SocialNetworks) executed");
                }
                resolve();
            },true);
        } else {
            resolve();
        }
    }

    // Alert Helper
    function alertMsg(title,msg,type) {
        if(typeof type=='undefined') type = 'type-default';
        BootstrapDialog.show({
            title: title,
            message: msg,
            type: type
        });
    }
    // VIEW MODEL FOR THE PAGE.
    var BloombeesModel = function () {
        var self = this;
        self.init = false;
        self.initLoading = ko.observable(true);
        self.isAuth = ko.observable(Bloombees.isAuth());
        self.userData = ko.observable({Store_uniqueId: Core.user.info['Store_uniqueId']});

        self.loadHomeTemplate = function() {
            if(self.isAuth ) {
                return('/directives/auth/home.htm');
            } else {
                return('/directives/noauth/home.htm');

            }
        }

        // About social networks
        // -- DRAW Social Networks.
        // Transform and update socialNetworks based on Core.data.et('connectedSocialNetworks')
        self.socialNetworks = ko.observable([]);
        self.availableSocialNetWorks = {google:{active:false,id:null},facebook:{active:false,id:null},instagram:{active:false,id:null},twitter:{active:false,id:null},pinterest:{active:false,id:null},linkedin:{active:false,id:null},vk:{active:false,id:null}};

        self.drawSocialNetworksConnected = function() {

            // Reset in each call
            for (k in self.availableSocialNetWorks) {
                self.availableSocialNetWorks[k].active = false;
                self.availableSocialNetWorks[k].id = null;
            }

            // See current connected SocialNetworks
            var connectedSocialNetworks = Core.data.get('connectedSocialNetworks');
            if(Core.user.isAuth() && typeof connectedSocialNetworks =='object' && connectedSocialNetworks.length) {
                // loop all the social networks to update it.
                for(k in connectedSocialNetworks) {
                    sn = connectedSocialNetworks[k].SocialNetwork_name.toLowerCase();
                    id = connectedSocialNetworks[k].SocialNetwork_id;
                    if(typeof self.availableSocialNetWorks[sn] != 'undefined') {
                        self.availableSocialNetWorks[sn].active = true;
                        self.availableSocialNetWorks[sn].id = id;
                    }
                }
            } else {
                Core.error.add('BloombeesModel.socialNetworksConnected: Error of programing. This condition should not happen');
            }

            // Transform data to be printed
            snArray = [];
            for(k in self.availableSocialNetWorks) {
                snArray.push({sn:k,active:self.availableSocialNetWorks[k].active})
            }
            self.socialNetworks(snArray);

        }

        self.bottomData = ko.observable({ bloombeesAPI: Core.config.get('bloombeesAPI'), bbtoken: Core.user.getCookieValue(), bbhash: Core.cookies.get(Bloombees.cookieNameForHash)});
        // Reset all the components based on the values
        self.reset = function() {
            self.isAuth(Bloombees.isAuth());
            self.userData({Store_uniqueId: Core.user.info['Store_uniqueId']});
            self.bottomData({bloombeesAPI: Core.config.get('bloombeesAPI'),bbtoken:Core.user.getCookieValue(),bbhash:Core.cookies.get(Bloombees.cookieNameForHash)});
            self.drawSocialNetworksConnected();
            self.initLoading(false);
        }

        // Login/password
        self.loginEmail = ko.observable();
        self.loginPassword = ko.observable();

    };
    var vm = null; //ViewModel for the app

    Bloombees.debug = true;
    // Control of auth
    if(oauth = Core.url.formParams('oauth')) {
        window.focus();
        Core.cookies.set('oauth',oauth);
        window.close();
    } if(oauthconnect = Core.url.formParams('oauthconnect')) {
        window.focus();
        Core.cookies.set('oauthconnect',oauthconnect);
        window.close();
    } else {
        Bloombees.init(function () {
            Core.bind([readConnectedSocialNetworks], function () {
                // Do the binds
                try {
                    vm = new BloombeesModel();
                    ko.applyBindings(vm);
                    if (Core.user.isAuth()) vm.drawSocialNetworksConnected();

                    vm.initLoading(false);

                } catch (err) {
                    console.log(err);
                }
            });
        });
    }



</script>
</body>
</html>